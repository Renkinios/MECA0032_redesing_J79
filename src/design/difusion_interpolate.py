import numpy as np
from numpy.polynomial.polynomial import Polynomial
import matplotlib.pyplot as plt

# Définition globale des paramètres de police et de taille pour tous les graphiques
plt.rc('font', family='serif')  # Police avec empattements, comme Times
plt.rc('text', usetex=True)  # Utiliser LaTeX pour le texte dans les figures
plt.rcParams.update({
    'font.size': 14,       # Taille de police générale
    'legend.fontsize': 14, # Taille de police pour les légendes
    'axes.labelsize': 16,  # Taille de police pour les étiquettes des axes
})

color_list = [
    "#1f77b4",  # Bleu (standard, agréable pour les graphiques)
    "#ff7f0e",  # Orange (chaleureux et visible)
    "#2ca02c",  # Vert (équilibré)
    "#d62728",  # Rouge (contrasté)
    "#9467bd",  # Violet (subtil et élégant)
    "#8c564b",  # Marron (neutre et sérieux)
    "#e377c2",  # Rose (dynamique)
    "#7f7f7f",  # Gris (sophistiqué et neutre)
    "#bcbd22",  # Vert-jaune (vivant)
    "#17becf",  # Cyan (frais et lumineux)
    "#ff9896",  # Rose clair (soft contrast)
    "#c5b0d5",  # Violet clair (épuré)
    "#9edae5",  # Cyan clair (moderne)
    "#f7b6d2",  # Rose pastel (doux)
    "#ffbb78",  # Orange pastel (chaleur)
]

DF = [0.012941176470588248, 0.03823529411764707, 0.0423529411764706, 0.052352941176470595, 
     0.07411764705882354, 0.08294117647058824, 0.08823529411764706, 0.09764705882352942, 
     0.10764705882352942, 0.11941176470588236, 0.14941176470588236, 0.15411764705882353, 
     0.1588235294117647, 0.1623529411764706, 0.17352941176470588, 0.17352941176470588, 
     0.17941176470588235, 0.18941176470588234, 0.21764705882352942, 0.2152941176470588, 
     0.21705882352941175, 0.2223529411764706, 0.22470588235294117, 0.2288235294117647, 
     0.23352941176470587, 0.23941176470588235, 0.2464705882352941, 0.28705882352941176, 
     0.3005882352941176, 0.3, 0.3176470588235294, 0.31882352941176473, 0.32588235294117646, 
     0.3288235294117647, 0.3417647058823529, 0.3352941176470588, 0.3447058823529412, 
     0.36058823529411765, 0.36, 0.36882352941176466, 0.3747058823529411, 0.37882352941176467, 
     0.39, 0.39588235294117646, 0.4035294117647059, 0.4135294117647058, 0.4135294117647058, 
     0.4141176470588235, 0.4158823529411765, 0.42470588235294116, 0.42647058823529405, 
     0.4358823529411765, 0.43352941176470583, 0.43352941176470583, 0.4494117647058823, 
     0.46058823529411763, 0.4747058823529412, 0.48882352941176466, 0.5023529411764706, 
     0.4894117647058823, 0.5, 0.5017647058823529, 0.5088235294117647, 0.5170588235294117, 
     0.508235294117647, 0.5229411764705882, 0.5288235294117647, 0.5152941176470588, 
     0.5258823529411765, 0.5388235294117647, 0.538235294117647, 0.5452941176470588, 
     0.5511764705882353, 0.5670588235294117, 0.57, 0.5829411764705882, 0.5876470588235294, 
     0.6005882352941175, 0.6152941176470588, 0.6152941176470588, 0.6076470588235293, 
     0.608235294117647, 0.6141176470588234, 0.6294117647058823, 0.6194117647058823, 
     0.6341176470588235, 0.6505882352941176, 0.6247058823529411, 0.6288235294117647, 
     0.6299999999999999, 0.6394117647058822, 0.6488235294117647, 0.6594117647058823, 
     0.6599999999999999, 0.6894117647058823, 0.7194117647058823, 0.736470588235294]

moment_thickness = [0.005847953216374269, 0.004561403508771929, 0.005847953216374269, 0.005847953216374269, 
     0.005029239766081871, 0.005029239766081871, 0.00631578947368421, 0.0061988304093567245, 
     0.005146198830409357, 0.00654970760233918, 0.004912280701754385, 0.00654970760233918, 
     0.004327485380116958, 0.00631578947368421, 0.005380116959064327, 0.005380116959064327, 
     0.006900584795321638, 0.004795321637426901, 0.004210526315789474, 0.004795321637426901, 
     0.007134502923976608, 0.005847953216374269, 0.004912280701754385, 0.007017543859649122, 
     0.008304093567251461, 0.007134502923976608, 0.00608187134502924, 0.008304093567251461, 
     0.008654970760233919, 0.00654970760233918, 0.009941520467836258, 0.00783625730994152, 
     0.009473684210526316, 0.007953216374269005, 0.008888888888888889, 0.009239766081871345, 
     0.010409356725146198, 0.008538011695906433, 0.00760233918128655, 0.010175438596491228, 
     0.008654970760233919, 0.010175438596491228, 0.00935672514619883, 0.008538011695906433, 
     0.010760233918128656, 0.01087719298245614, 0.01087719298245614, 0.01263157894736842, 
     0.009239766081871345, 0.010526315789473684, 0.012514619883040937, 0.010292397660818714, 
     0.011461988304093567, 0.011461988304093567, 0.013099415204678362, 0.01391812865497076, 
     0.011929824561403509, 0.010175438596491228, 0.010292397660818714, 0.01263157894736842, 
     0.014035087719298246, 0.0160233918128655, 0.015555555555555555, 0.015555555555555555, 
     0.01391812865497076, 0.014152046783625732, 0.01368421052631579, 0.013216374269005848, 
     0.017543859649122806, 0.018362573099415205, 0.016608187134502926, 0.016608187134502926, 
     0.017426900584795322, 0.016842105263157894, 0.01590643274853801, 0.01871345029239766, 
     0.01953216374269006, 0.02, 0.0191812865497076, 0.017777777777777778, 0.01672514619883041, 
     0.021637426900584796, 0.024444444444444446, 0.01847953216374269, 0.02152046783625731, 
     0.02713450292397661, 0.02198830409356725, 0.022456140350877195, 0.02152046783625731, 
     0.02327485380116959, 0.03134502923976608, 0.033918128654970764, 0.0335672514619883, 
     0.0352046783625731, 0.0456140350877193, 0.030877192982456142, 0.030292397660818714]

def get_interpolation_diffusion(difusion_point):
    x_data = np.array(DF)
    y_data = np.array(moment_thickness)
    sorted_indices = np.argsort(x_data)
    x_sorted = x_data[sorted_indices]
    y_sorted = y_data[sorted_indices]
    unique_indices = np.unique(x_sorted, return_index=True)[1]
    x_unique = x_sorted[unique_indices]
    y_unique = y_sorted[unique_indices]
    poly_degree_4 = Polynomial.fit(x_unique, y_unique, 4, domain=[min(x_unique), max(x_unique)])
    moment_thickness_interpolate = poly_degree_4(difusion_point)
    return moment_thickness_interpolate

def viz_interpolation():
    x_query = np.linspace(min(DF), max(DF), 500)
    y_query = get_interpolation_diffusion(x_query)
    plt.figure(figsize=(10, 6))
    plt.scatter(DF, moment_thickness, facecolors='none', edgecolors=color_list[0], label=r'Data', s=50, alpha=0.7)
    plt.plot(x_query, y_query, label=r'Degree 4 Fit', linestyle='-', linewidth=2, color = color_list[1])
    plt.xlabel(r'Diffusion Factor DF [-]')
    plt.ylabel(r'Moment Thickness $\theta/c$ [-]')
    plt.legend()
    plt.savefig("../figures/interpolation_diffusion.pdf", dpi=300, bbox_inches='tight')
    plt.close()

